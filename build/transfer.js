"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//const translit = require("./transliteration");
const usb = require('usb');
// You can find ids in "Device Manager" -> "Properties"
const aVID = 9025;
const aPID = 579;
const aInterface = 1;
const aOutEndpoint = 0;
const aInEndpoint = 1;
let arduinoEndpoint;
/*
  -= Only on Windows =-
  Must be installed the WinUSB driver (use the Zadig program)
  On Windows 10 you should enter "Safe Mode" or use console commands like
    "bcdedit.exe -set loadoptions DISABLE_INTEGRITY_CHECKS"
    "bcdedit.exe -set TESTSIGNING ON"
    to enable "Test Mode" to install driver
  To disable "Test Mode" use "bcdedit.exe -set TESTSIGNING OFF" command
  Terminal must be elevated
*/
function initArduino() {
    const arduino = usb.findByIds(aVID, aPID);
    arduino.open();
    const arduinoInterface = arduino.interfaces[aInterface];
    // USB port can be busy, so we free them
    if (arduinoInterface.isKernelDriverActive) {
        try {
            arduinoInterface.detachKernelDriver();
        }
        catch (err) { }
    }
    arduinoInterface.claim();
    arduinoEndpoint = arduinoInterface.endpoints[aOutEndpoint];
    arduinoEndpoint.transferType = usb.LIBUSB_TRANSFER_TYPE_BULK;
}
exports.initArduino = initArduino;
function divide(str, n) {
    return str.match(RegExp(`.{1,${n}}`, 'gm')).map(x => x + '\0');
}
function send(str) {
    arduinoEndpoint.transfer(str, function (err) {
        console.log(err != undefined ? err : `[TRANSFERRED] ${str}`);
    });
}
// LINE_HEIGHT was determined in *.ino project
const DISPLAY_WIDTH = 128;
const DISPLAY_HEIGHT = 64;
const LINES_ON_SCREEN = 3;
const TIMEOUT = 5000; // ms (1s = 1000ms)
let timer;
function transfer(msg, page) {
    const pages = Math.ceil(msg.content.length / LINES_ON_SCREEN);
    send(`${msg.sendTime}\0`);
    send(`${msg.author}\0`);
    send(`${page + 1}/${pages}\0`);
    for (let j = page * LINES_ON_SCREEN; j < (page + 1) * LINES_ON_SCREEN && j < msg.content.length; j++)
        send(msg.content[j]);
}
exports.transfer = transfer;
function sendMessage(msg) {
    msg.content = divide(msg.rawContent, 20);
    clearInterval(timer);
    cycle(msg);
}
exports.sendMessage = sendMessage;
function cycle(msg) {
    const pages = Math.ceil(msg.content.length / LINES_ON_SCREEN);
    if (pages > 1) {
        let page = 0;
        timer = setInterval(() => {
            transfer(msg, page);
            page++;
            if (page == pages)
                page = 0;
        }, TIMEOUT);
    }
    else {
        transfer(msg, 0);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmZXIuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvbWF4L9CU0L7QutGD0LzQtdC90YLRiy9Vbm9SZXRyYW5zbGF0b3Ivc3JjLyIsInNvdXJjZXMiOlsidHJhbnNmZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnREFBZ0Q7QUFDaEQsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBSTNCLHVEQUF1RDtBQUN2RCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUM7QUFDbEIsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDO0FBQ2pCLE1BQU0sVUFBVSxHQUFHLENBQUMsQ0FBQztBQUNyQixNQUFNLFlBQVksR0FBRyxDQUFDLENBQUM7QUFDdkIsTUFBTSxXQUFXLEdBQUcsQ0FBQyxDQUFDO0FBRXRCLElBQUksZUFBZSxDQUFDO0FBRXBCOzs7Ozs7Ozs7RUFTRTtBQUNGO0lBQ0UsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDMUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2YsTUFBTSxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3hELHdDQUF3QztJQUN4QyxFQUFFLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDO1lBQ0gsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztRQUN4QyxDQUFDO1FBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUM7SUFDbEIsQ0FBQztJQUNELGdCQUFnQixDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3pCLGVBQWUsR0FBRyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDM0QsZUFBZSxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMseUJBQXlCLENBQUM7QUFD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